(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{108:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return d}));var r=a(0),n=a.n(r);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=n.a.createContext({}),u=function(e){var t=n.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=u(e.components);return n.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},m=n.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),s=u(a),m=r,d=s["".concat(o,".").concat(m)]||s[m]||b[m]||l;return a?n.a.createElement(d,i(i({ref:t},p),{},{components:a})):n.a.createElement(d,i({ref:t},p))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=a[p];return n.a.createElement.apply(null,o)}return n.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"},92:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return i})),a.d(t,"toc",(function(){return c})),a.d(t,"default",(function(){return u}));var r=a(3),n=a(7),l=(a(0),a(108)),o={},i={unversionedId:"wire-frames",id:"wire-frames",isDocsHomePage:!1,title:"wire-frames",description:"Wire frames",source:"@site/docs/wire-frames.md",slug:"/wire-frames",permalink:"/docs/wire-frames",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/wire-frames.md",version:"current",sidebar:"docs",previous:{title:"Thank you!",permalink:"/docs/thank-you"},next:{title:"objective",permalink:"/docs/objective"}},c=[{value:"What will be a template structure",id:"what-will-be-a-template-structure",children:[]},{value:"Deployment file/folder",id:"deployment-filefolder",children:[]},{value:"How to list and manage templates?",id:"how-to-list-and-manage-templates",children:[{value:"How this will help?",id:"how-this-will-help",children:[]},{value:"Template stats management",id:"template-stats-management",children:[]}]},{value:"User Journeys",id:"user-journeys",children:[]}],p={toc:c};function u(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(l.b)("wrapper",Object(r.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"wire-frames"},"Wire frames"),Object(l.b)("p",null,"What user will need for deployment"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"A template"),Object(l.b)("li",{parentName:"ul"},"A deployment platform and strategy")),Object(l.b)("p",null,"What user inputs will require"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Template selection"),Object(l.b)("li",{parentName:"ul"},"Deployment platform and strategy selection"),Object(l.b)("li",{parentName:"ul"},"Platform tokens for deployment")),Object(l.b)("h2",{id:"what-will-be-a-template-structure"},"What will be a template structure"),Object(l.b)("p",null,"A Template will be have all initial code of the project with"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"deployment information"),Object(l.b)("li",{parentName:"ul"},"what need to be replaced with")),Object(l.b)("h2",{id:"deployment-filefolder"},"Deployment file/folder"),Object(l.b)("p",null,"Deployment file will have information about"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Supported deployment platforms"),Object(l.b)("li",{parentName:"ul"},"Supported tags"),Object(l.b)("li",{parentName:"ul"},"Required credentials"),Object(l.b)("li",{parentName:"ul"},"Required pre-requisites","[repo, database, other services]"),Object(l.b)("li",{parentName:"ul"},"Supported deployment engine"),Object(l.b)("li",{parentName:"ul"},"Template meta-data"),Object(l.b)("li",{parentName:"ul"},"Deployment engine definition","[ ::TODO::]")),Object(l.b)("h2",{id:"how-to-list-and-manage-templates"},"How to list and manage templates?"),Object(l.b)("p",null,"Management: Use a github project to manage all templates"),Object(l.b)("p",null,"Listing: We will use a JSON file to list all templates and JSON file will be generated automatically by scrapping all available repositories."),Object(l.b)("h3",{id:"how-this-will-help"},"How this will help?"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"To follow open standards"),Object(l.b)("li",{parentName:"ul"},"To track template changes"),Object(l.b)("li",{parentName:"ul"},"To incorporate open-source templates(By Forking in this project)")),Object(l.b)("h3",{id:"template-stats-management"},"Template stats management"),Object(l.b)("p",null,"How we will manage a template stats like"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Total number of deployments till today"),Object(l.b)("li",{parentName:"ul"},"Last deployment status"),Object(l.b)("li",{parentName:"ul"},"Deployment stats")),Object(l.b)("h2",{id:"user-journeys"},"User Journeys"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"User want to see all current and previous deployment status","[Dashboard]"),Object(l.b)("li",{parentName:"ul"},"User want to see all logs of the deployment"),Object(l.b)("li",{parentName:"ul"},"User want to trigger a new deployment"),Object(l.b)("li",{parentName:"ul"},"User want to save credentials for future deployments"),Object(l.b)("li",{parentName:"ul"},"User want to check status of supported services/platforms"),Object(l.b)("li",{parentName:"ul"},"User want to log an issue related to template deployment")))}u.isMDXComponent=!0}}]);