(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{108:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var l=n(0),r=n.n(l);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,l,r=function(e,t){if(null==e)return{};var n,l,r={},a=Object.keys(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),s=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,i=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(n),b=l,d=u["".concat(i,".").concat(b)]||u[b]||m[b]||a;return n?r.a.createElement(d,o(o({ref:t},c),{},{components:n})):r.a.createElement(d,o({ref:t},c))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,i=new Array(a);i[0]=b;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var c=2;c<a;c++)i[c]=n[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},95:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return s}));var l=n(3),r=n(7),a=(n(0),n(108)),i={title:"Wire frames"},o={unversionedId:"wire-frames",id:"wire-frames",isDocsHomePage:!1,title:"Wire frames",description:"What user will need for deployment",source:"@site/docs/wire-frames.md",slug:"/wire-frames",permalink:"/wire-frames",editUrl:"https://github.com/deployment-helper/docs-deployment-helper/tree/dev/docs/wire-frames.md",version:"current",sidebar:"docs",previous:{title:"Decisions",permalink:"/technical-design/decisions"},next:{title:"Design",permalink:"/technical-design/design"}},p=[{value:"What will be a template structure",id:"what-will-be-a-template-structure",children:[]},{value:"Deployment file/folder",id:"deployment-filefolder",children:[]},{value:"How to list and manage templates?",id:"how-to-list-and-manage-templates",children:[{value:"How this will help?",id:"how-this-will-help",children:[]},{value:"Template stats management",id:"template-stats-management",children:[]}]},{value:"User Journeys",id:"user-journeys",children:[]}],c={toc:p};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(l.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"What user will need for deployment"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"A template"),Object(a.b)("li",{parentName:"ul"},"A deployment platform and strategy")),Object(a.b)("p",null,"What user inputs will require"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Template selection"),Object(a.b)("li",{parentName:"ul"},"Deployment platform and strategy selection"),Object(a.b)("li",{parentName:"ul"},"Platform tokens for deployment")),Object(a.b)("h2",{id:"what-will-be-a-template-structure"},"What will be a template structure"),Object(a.b)("p",null,"A Template will be have all initial code of the project with"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"deployment information"),Object(a.b)("li",{parentName:"ul"},"what need to be replaced with")),Object(a.b)("h2",{id:"deployment-filefolder"},"Deployment file/folder"),Object(a.b)("p",null,"Deployment file will have information about"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Supported deployment platforms"),Object(a.b)("li",{parentName:"ul"},"Supported tags"),Object(a.b)("li",{parentName:"ul"},"Required credentials"),Object(a.b)("li",{parentName:"ul"},"Required pre-requisites","[repo, database, other services]"),Object(a.b)("li",{parentName:"ul"},"Supported deployment engine"),Object(a.b)("li",{parentName:"ul"},"Template meta-data"),Object(a.b)("li",{parentName:"ul"},"Deployment engine definition","[ ::TODO::]")),Object(a.b)("h2",{id:"how-to-list-and-manage-templates"},"How to list and manage templates?"),Object(a.b)("p",null,"Management: Use a github project to manage all templates"),Object(a.b)("p",null,"Listing: We will use a JSON file to list all templates and JSON file will be generated automatically by scrapping all available repositories."),Object(a.b)("h3",{id:"how-this-will-help"},"How this will help?"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"To follow open standards"),Object(a.b)("li",{parentName:"ul"},"To track template changes"),Object(a.b)("li",{parentName:"ul"},"To incorporate open-source templates(By Forking in this project)")),Object(a.b)("h3",{id:"template-stats-management"},"Template stats management"),Object(a.b)("p",null,"How we will manage a template stats like"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Total number of deployments till today"),Object(a.b)("li",{parentName:"ul"},"Last deployment status"),Object(a.b)("li",{parentName:"ul"},"Deployment stats")),Object(a.b)("h2",{id:"user-journeys"},"User Journeys"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"User want to see all current and previous deployment status","[Dashboard]"),Object(a.b)("li",{parentName:"ul"},"User want to see all logs of the deployment"),Object(a.b)("li",{parentName:"ul"},"User want to trigger a new deployment"),Object(a.b)("li",{parentName:"ul"},"User want to save credentials for future deployments"),Object(a.b)("li",{parentName:"ul"},"User want to check status of supported services/platforms"),Object(a.b)("li",{parentName:"ul"},"User want to log an issue related to template deployment")))}s.isMDXComponent=!0}}]);